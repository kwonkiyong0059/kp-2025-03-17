name: deploy
on:
  push:
    paths:
      - '.github/workflows/**'
      - 'src/**'
      - 'build.gradle.kts'
      - 'settings.gradle.kts'
      - 'Dockerfile'
    branches:
      - main
permissions:
  contents: write
  packages: write
jobs:
  makeTagAndRelease:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Tag
        id: create_tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          release_name: Release ${{ steps.create_tag.outputs.new_tag }}
          body: "Automated release"
          draft: false
          prerelease: false
  buildImageAndPush:
    name: Docker Build & Push
    needs: makeTagAndRelease
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: app20250314
    steps:
      - uses: actions/checkout@v4
      - name: Create application-secret.yml
        env:
          APPLICATION_SECRET: ${{ secrets.APPLICATION_SECRET_YML }}
        run: echo "$APPLICATION_SECRET" > src/main/resources/application-secret.yml
      - name: Set lowercase owner name
        run: echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV
      - name: Install Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: Build & Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/${{ env.DOCKER_IMAGE_NAME }}:${{ needs.makeTagAndRelease.outputs.tag_name }}
            ghcr.io/${{ env.OWNER_LC }}/${{ env.DOCKER_IMAGE_NAME }}:latest
  deploy:
    runs-on: ubuntu-latest
    needs: buildImageAndPush
    steps:
      - name: Deploy to AWS EC2
        uses: peterkimzz/aws-ssm-send-command@master
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          instance-ids: "i-0553abb2ebd4458b4"
          working-directory: /
          comment: Deploy
          command: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ghcr.io/${{ env.OWNER_LC }}/app20250314:latest
            docker stop app1 2>/dev/null || true
            docker rm app1 2>/dev/null || true
            docker run -d --name app1 -p 8080:8080 ghcr.io/${{ env.OWNER_LC }}/app20250314:latest
            docker rmi $(docker images -f "dangling=true" -q) || true
